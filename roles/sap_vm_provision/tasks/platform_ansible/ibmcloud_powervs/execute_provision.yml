---
# The tasks in this file are executed in a loop over the defined hosts

# When SAP HANA Scale-Out is used, if host name is not in original specifications then strip suffix node number from host name
- name: Set fact when performing SAP HANA Scale-Out
  ansible.builtin.set_fact:
    scaleout_origin_host_spec: "{{ inventory_hostname | regex_replace('^(.+?)\\d*$', '\\1') }}"
  when:
    - sap_hana_scaleout_active_coordinator is defined
    - not inventory_hostname in lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan].keys()


# Status will change from Building > Warning (VM = Active, Health = Warning) > Active. The Ansible Task will continue once the Active status has been reached.
- name: Provision IBM Power Virtual Server instance on IBM Cloud
  register: register_provision_host_single
  ibm.cloudcollection.ibm_pi_instance:
    pi_cloud_instance_id: "{{ register_ibmcloud_power_iaas_workspace_service_instance.resource.guid }}" # must be GUID, not CRN

    pi_instance_name: "{{ inventory_hostname }}"
    pi_image_id: "{{ register_provisioned_os_image.resource.id if register_provisioned_os_image.rc == 0 else register_existing_os_image.resource.id }}"

    pi_sys_type: e980
    pi_sap_profile_id: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan][scaleout_origin_host_spec | default(inventory_hostname)].virtual_machine_profile }}"
    pi_key_pair_name: "{{ sap_vm_provision_ibmcloud_powervs_key_pair_name_ssh_host_public_key }}"

    pi_network:
      - network_id: "{{ register_ibmcloud_pi_subnet.resource.id }}"

    pi_storage_type: tier1
    #pi_volume_ids: []

    pi_pin_policy: none
    pi_health_status: OK

# Use check to avoid idempotency issues with legacy ibm.cloudcollection Ansible Collection (until ibm.cloud Ansible Collection is out of beta)
- name: Check IBM Power Virtual Server instance on IBM Cloud
  register: register_provisioned_host_single
  ibm.cloudcollection.ibm_pi_instance_info:
    pi_cloud_instance_id: "{{ register_ibmcloud_power_iaas_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_instance_name: "{{ inventory_hostname }}"


# Create flat list with names for each volume to be created.
- name: Set fact for target device map
  ansible.builtin.set_fact:
    storage_disks_map: |
      {% set disks_map = [] -%}
      {% for storage_item in lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan][scaleout_origin_host_spec | default(inventory_hostname)].storage_definition -%}
        {% for idx in range(0, storage_item.disk_count | default(1)) -%}
          {% if (storage_item.filesystem_type is defined) -%}
            {% if ('swap' in storage_item.filesystem_type and storage_item.swap_path is not defined)
            or ('swap' not in storage_item.filesystem_type and storage_item.nfs_path is not defined) -%}
              {% set vol = disks_map.extend([
              {
                'definition_key': storage_item.name,
                'name': storage_item.name + idx|string,
                'size': storage_item.disk_size | default(0),
                'type': storage_item.disk_type | default('general-purpose')
              }
              ]) %}
            {%- endif %}
          {%- endif %}
        {%- endfor %}
      {%- endfor %}
      {{ disks_map }}


- name: Provision IBM Power Infrastructure Block Storage volumes for IBM Power VS instance filesystems
  register: register_provisioned_volumes
  ibm.cloudcollection.ibm_pi_volume:
    pi_cloud_instance_id: "{{ register_ibmcloud_power_iaas_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_volume_name: "{{ inventory_hostname + '-vol-' + vol_item.name | replace('_', '-')}}"
    pi_volume_type: "{{ vol_item.type }}"
    pi_volume_size: "{{ vol_item.size }}"
    pi_volume_shareable: false
    pi_replication_enabled: false
    #delete_on_termination: true
  loop: "{{ storage_disks_map }}"
  loop_control:
    loop_var: vol_item
    index_var: vol_item_index
    label: "{{ vol_item.definition_key }}: {{ vol_item.name }} (size: {{ vol_item.size }})"
  when:
    - vol_item.size > 0
  failed_when:
    - not register_provisioned_volumes.rc == 0
    - not 'already exists' in register_provisioned_volumes.stderr

# Use check to avoid idempotency issues with legacy ibm.cloudcollection Ansible Collection (until ibm.cloud Ansible Collection is out of beta)
- name: Check status of IBM Power Infrastructure Block Storage volumes
  register: register_volumes
  ibm.cloudcollection.ibm_pi_volume_info:
    pi_cloud_instance_id: "{{ register_ibmcloud_power_iaas_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_volume_name: "{{ inventory_hostname + '-vol-' + vol_item.name | replace('_', '-')}}"
  loop: "{{ storage_disks_map }}"
  loop_control:
    loop_var: vol_item
    index_var: vol_item_index
    label: "{{ inventory_hostname + '-vol-' + vol_item.name | replace('_', '-')}}"
  when:
    - vol_item.size > 0
  retries: 5
  until: register_volumes.rc == 0 and (register_volumes.resource is defined and register_volumes.resource.state == "available", "in-use")
  delay: 20

- name: Attach IBM Power Infrastructure Block Storage volumes as filesystem for IBM Power VS instance
  register: register_attached_volumes
  ibm.cloudcollection.ibm_pi_volume_attach:
    pi_cloud_instance_id: "{{ register_ibmcloud_power_iaas_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_volume_id: "{{ vol_item.resource.id }}"
    pi_instance_id: "{{ register_provisioned_host_single.resource.id }}"
  loop: "{{ register_volumes.results }}"
  loop_control:
    loop_var: vol_item
    index_var: vol_item_index
    label: "{{ vol_item.resource.pi_volume_name }}"
  failed_when:
    - not register_attached_volumes.rc == 0
    - not 'volume cannot be attached in the current state' in register_attached_volumes.stderr # when already attached message
  retries: 1
  until: register_attached_volumes is success
  delay: 10

- name: Read IBM Power Virtual Server information
  register: instance_info
  ibm.cloudcollection.ibm_pi_instance_info:
    pi_cloud_instance_id: "{{ register_ibmcloud_power_iaas_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_instance_name: "{{ register_provisioned_host_single.resource.pi_instance_name }}"

- name: Add host facts
  ansible.builtin.set_fact:
    volume_provisioning: "{{ register_volumes }}"
    instance_info: "{{ instance_info }}"
  delegate_to: "{{ inventory_hostname }}"
  delegate_facts: true


- name: Create fact for delegate host IP
  ansible.builtin.set_fact:
    provisioned_private_ip: "{{ register_provisioned_host_single.resource.addresses[0].ip }}"


- name: Copy facts to delegate host
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  ansible.builtin.set_fact:
    delegate_sap_vm_provision_bastion_user: "{{ sap_vm_provision_bastion_user }}"
    delegate_sap_vm_provision_bastion_public_ip: "{{ sap_vm_provision_bastion_public_ip }}"
    delegate_sap_vm_provision_bastion_ssh_port: "{{ sap_vm_provision_bastion_ssh_port }}"
    delegate_sap_vm_provision_ssh_bastion_private_key_file_path: "{{ sap_vm_provision_ssh_bastion_private_key_file_path }}"
    delegate_sap_vm_provision_ssh_host_private_key_file_path: "{{ sap_vm_provision_ssh_host_private_key_file_path }}"
    delegate_private_ip: "{{ register_provisioned_host_single.resource.addresses[0].ip }}"
    delegate_hostname: "{{ inventory_hostname }}"
    delegate_sap_vm_provision_dns_root_domain_name: "{{ sap_vm_provision_dns_root_domain }}"


### begin block, parameters will be applied to each task within the block
- name: Allow login from root OS User
  remote_user: root
  become: true
  become_user: root
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  vars:
    ansible_ssh_private_key_file: "{{ delegate_sap_vm_provision_ssh_host_private_key_file_path }}"
    ansible_ssh_common_args: -o ConnectTimeout=180 -o ControlMaster=auto -o ControlPersist=3600s -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ForwardX11=no -o ProxyCommand='ssh -W %h:%p {{ delegate_sap_vm_provision_bastion_user }}@{{ delegate_sap_vm_provision_bastion_public_ip }} -p {{ delegate_sap_vm_provision_bastion_ssh_port }} -i {{ delegate_sap_vm_provision_ssh_bastion_private_key_file_path }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
  block:

    - name: Create .ssh directory for root user
      ansible.builtin.file:
        path: /root/.ssh
        state: directory
        mode: '0744'

    - name: Create root authorized_keys file and entries
      ansible.builtin.copy:
        dest: /root/.ssh/authorized_keys
        mode: '0600'
        content: |
          {{ register_ibmcloud_pi_ssh_public_key.resource.ssh_key }}

    - name: Permit root login
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: '(^PermitRootLogin no)'
        replace: 'PermitRootLogin yes'
      register: sshd_config

    - name: Reload sshd service
      ansible.builtin.service:
        name: sshd
        state: reloaded
      when:
        - sshd_config.changed

### end of block


- name: Append loop value to register
  ansible.builtin.set_fact:
    register_provisioned_host_single: "{{ register_provisioned_host_single | combine( { 'host_node' : inventory_hostname } , { 'sap_host_type' : lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan][scaleout_origin_host_spec | default(inventory_hostname)].sap_host_type } , { 'sap_system_type' : (lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan][scaleout_origin_host_spec | default(inventory_hostname)].sap_system_type | default('')) } ) }}"

- name: Append output to merged register
  ansible.builtin.set_fact:
    register_provisioned_host_all: "{{ register_provisioned_host_all + [register_provisioned_host_single] }}"
