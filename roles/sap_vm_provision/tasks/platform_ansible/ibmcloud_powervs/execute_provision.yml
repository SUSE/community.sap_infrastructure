---
# The tasks in this file are executed in a loop over the defined hosts

- name: Ensure short hostname is not longer than 13 characters (see SAP Note 611361)
  ansible.builtin.assert:
    that: (inventory_hostname | length | int) <= (13 | int)
    fail_msg: "FAIL: The length of the hostname is {{ inventory_hostname | length | int }} but must be less or equal to 13 characters!"

# When SAP HANA Scale-Out is used, if host name is not in original specifications then strip suffix node number from host name
- name: Set fact when performing SAP HANA Scale-Out
  ansible.builtin.set_fact:
    scaleout_origin_host_spec: "{{ inventory_hostname | regex_replace('^(.+?)\\d*$', '\\1') }}"
  when:
    - sap_vm_provision_calculate_sap_hana_scaleout_active_coordinator is defined
    - not inventory_hostname in lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan].keys()

- name: Set fact for host specifications of the provision target
  ansible.builtin.set_fact:
    target_provision_host_spec: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan][scaleout_origin_host_spec | default(inventory_hostname)] }}"

# Create flat list with names for each volume to be created.
# Create flat list with disk tiers.
- name: Set fact for target device map
  ansible.builtin.set_fact:
    storage_disks_map: |
      {% set disks_map = [] -%}
      {% for storage_item in target_provision_host_spec.storage_definition -%}
        {% for idx in range(0, storage_item.disk_count | default(1)) -%}
          {% if (storage_item.filesystem_type is defined) -%}
            {% if ('swap' in storage_item.filesystem_type and storage_item.swap_path is not defined)
            or ('swap' not in storage_item.filesystem_type and storage_item.nfs_path is not defined) -%}
              {% set vol = disks_map.extend([
              {
                'definition_key': storage_item.name,
                'name': storage_item.name + idx|string,
                'size': storage_item.disk_size | default(0),
                'type': storage_item.disk_type | default('tier3')
              }
              ]) %}
            {%- endif %}
          {%- endif %}
        {%- endfor %}
      {%- endfor %}
      {{ disks_map }}
    __sap_vm_provision_task_storage_type_tier: "{{ target_provision_host_spec.storage_definition | selectattr('disk_type','defined') | map(attribute='disk_type') | select() | list | unique }}"

- name: Confirm IBM Power Virtual Server Storage Type Tier
  ansible.builtin.fail:
    msg:
      IBM Power Virtual Servers require a static configuration for the Storage Type Tier,
      and all attached Block Storage Volumes must use this Storage Type Tier.
      Edit the Storage Definition variable to use the same Storage Type Tier for each Block Storage Volume.
  when: __sap_vm_provision_task_storage_type_tier | length > 1


# Status will change from Building > Warning (VM = Active, Health = Warning) > Active. The Ansible Task will continue once the Active status has been reached.
- name: Provision IBM Power Virtual Server instance on IBM Cloud
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single
  ibm.cloudcollection.ibm_pi_instance:
    pi_cloud_instance_id: "{{ __sap_vm_provision_task_ibmcloud_pi_workspace_service_instance.resource.guid }}" # must be GUID, not CRN

    pi_instance_name: "{{ inventory_hostname }}"
    pi_image_id: "{{ __sap_vm_provision_task_ibmcloud_pi_os_image_existing.resource.id }}"

    pi_sys_type: "{{ target_provision_host_spec.ibmcloud_powervs_hardware_machine_type }}"

    pi_sap_profile_id: "{{ target_provision_host_spec.virtual_machine_profile }}"

    pi_key_pair_name: "{{ sap_vm_provision_ibmcloud_powervs_key_pair_name_ssh_host_public_key }}"

    pi_network:
      - network_id: "{{ __sap_vm_provision_task_ibmcloud_pi_subnet.resource.id }}"

    # Storage Type Tier is a static configuration for the Virtual Server, it cannot be amended
    # All Block Storage Volumes attached to the Virtual Server, must use the set Storage Type Tier:
    #   tier0 (25 IOPS/GB), tier1 (10 IOPS/GB), tier3 (3 IOPS/GB), tier5k (Fixed 5000 IOPS)
    pi_storage_type: "{{ __sap_vm_provision_task_storage_type_tier | first }}"
    pi_storage_pool_affinity: true
    #pi_volume_ids: []

    pi_pin_policy: none
    pi_health_status: OK

    pi_placement_group_id: "{{ (
      (__sap_vm_provision_task_ibmcloud_placement_groups_list.resource.placement_groups | selectattr('name','search','hana'))[0].id
      if ('hana_primary' in target_provision_host_spec.sap_host_type or 'hana_secondary' in target_provision_host_spec.sap_host_type) and not __sap_vm_provision_task_ibmcloud_placement_groups_list is skipped
      else
      (__sap_vm_provision_task_ibmcloud_placement_groups_list.resource.placement_groups | selectattr('name','search','anydb'))[0].id
      if ('anydb_primary' in target_provision_host_spec.sap_host_type or 'anydb_secondary' in target_provision_host_spec.sap_host_type) and not __sap_vm_provision_task_ibmcloud_placement_groups_list is skipped
      else
      (__sap_vm_provision_task_ibmcloud_placement_groups_list.resource.placement_groups | selectattr('name','search','nwas'))[0].id
      if ('nwas_ascs' in target_provision_host_spec.sap_host_type or 'nwas_ers' in target_provision_host_spec.sap_host_type) and not __sap_vm_provision_task_ibmcloud_placement_groups_list is skipped
      ) | default(omit) }}"

    ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"

# Use check to avoid idempotency issues with legacy ibm.cloudcollection Ansible Collection (until ibm.cloud Ansible Collection is out of beta)
- name: Check IBM Power Virtual Server instance on IBM Cloud
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single
  ibm.cloudcollection.ibm_pi_instance_info:
    pi_cloud_instance_id: "{{ __sap_vm_provision_task_ibmcloud_pi_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_instance_name: "{{ inventory_hostname }}"
    ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"


- name: Provision IBM Power Infrastructure Block Storage volumes for IBM Power VS instance filesystems
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_volumes
  ibm.cloudcollection.ibm_pi_volume:
    pi_cloud_instance_id: "{{ __sap_vm_provision_task_ibmcloud_pi_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_volume_name: "{{ inventory_hostname + '-vol-' + vol_item.name | replace('_', '-')}}"
    pi_volume_type: "{{ vol_item.type }}"
    pi_volume_size: "{{ vol_item.size }}"
    pi_volume_shareable: false
    pi_replication_enabled: false
    #delete_on_termination: true
    ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
  loop: "{{ storage_disks_map }}"
  loop_control:
    loop_var: vol_item
    index_var: vol_item_index
    label: "{{ vol_item.definition_key }}: {{ vol_item.name }} (size: {{ vol_item.size }})"
  when:
    - vol_item.size > 0
  failed_when:
    - not __sap_vm_provision_task_provision_host_single_volumes.rc == 0
    - not 'already exists' in __sap_vm_provision_task_provision_host_single_volumes.stderr

# Use check to avoid idempotency issues with legacy ibm.cloudcollection Ansible Collection (until ibm.cloud Ansible Collection is out of beta)
- name: Check status of IBM Power Infrastructure Block Storage volumes
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_volumes_info
  ibm.cloudcollection.ibm_pi_volume_info:
    pi_cloud_instance_id: "{{ __sap_vm_provision_task_ibmcloud_pi_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_volume_name: "{{ inventory_hostname + '-vol-' + vol_item.name | replace('_', '-')}}"
    ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
  loop: "{{ storage_disks_map }}"
  loop_control:
    loop_var: vol_item
    index_var: vol_item_index
    label: "{{ inventory_hostname + '-vol-' + vol_item.name | replace('_', '-')}}"
  when:
    - vol_item.size > 0
  retries: 5
  until: __sap_vm_provision_task_provision_host_single_volumes_info.rc == 0 and (__sap_vm_provision_task_provision_host_single_volumes_info.resource is defined and __sap_vm_provision_task_provision_host_single_volumes_info.resource.state == "available", "in-use")
  delay: 20

- name: Attach IBM Power Infrastructure Block Storage volumes as filesystem for IBM Power VS instance
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_volume_attachments
  ibm.cloudcollection.ibm_pi_volume_attach:
    pi_cloud_instance_id: "{{ __sap_vm_provision_task_ibmcloud_pi_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_volume_id: "{{ vol_item.resource.id }}"
    pi_instance_id: "{{ __sap_vm_provision_task_provision_host_single.resource.id }}"
    ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
  loop: "{{ __sap_vm_provision_task_provision_host_single_volumes_info.results }}"
  loop_control:
    loop_var: vol_item
    index_var: vol_item_index
    label: "{{ vol_item.resource.pi_volume_name }}"
  failed_when:
    - not __sap_vm_provision_task_provision_host_single_volume_attachments.rc == 0
    - not 'volume cannot be attached in the current state' in __sap_vm_provision_task_provision_host_single_volume_attachments.stderr # when already attached message
  retries: 1
  until: __sap_vm_provision_task_provision_host_single_volume_attachments is success
  delay: 10

- name: Read IBM Power Virtual Server information
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_info
  ibm.cloudcollection.ibm_pi_instance_info:
    pi_cloud_instance_id: "{{ __sap_vm_provision_task_ibmcloud_pi_workspace_service_instance.resource.guid }}" # must be GUID, not CRN
    pi_instance_name: "{{ __sap_vm_provision_task_provision_host_single.resource.pi_instance_name }}"
    ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"

- name: Add host facts
  ansible.builtin.set_fact:
    __sap_vm_provision_task_provision_host_single_volumes: "{{ __sap_vm_provision_task_provision_host_single_volumes_info }}"
    __sap_vm_provision_task_provision_host_single_info: "{{ __sap_vm_provision_task_provision_host_single_info }}"
  delegate_to: "{{ inventory_hostname }}"
  delegate_facts: true


- name: Create fact for delegate host IP
  ansible.builtin.set_fact:
    provisioned_private_ip: "{{ __sap_vm_provision_task_provision_host_single.resource.networks[0].ip }}"


- name: Copy facts to delegate host
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  ansible.builtin.set_fact:
    delegate_sap_vm_provision_bastion_user: "{{ sap_vm_provision_bastion_user }}"
    delegate_sap_vm_provision_bastion_public_ip: "{{ sap_vm_provision_bastion_public_ip }}"
    delegate_sap_vm_provision_bastion_ssh_port: "{{ sap_vm_provision_bastion_ssh_port }}"
    delegate_sap_vm_provision_ssh_bastion_private_key_file_path: "{{ sap_vm_provision_ssh_bastion_private_key_file_path }}"
    delegate_sap_vm_provision_ssh_host_private_key_file_path: "{{ sap_vm_provision_ssh_host_private_key_file_path }}"
    delegate_private_ip: "{{ __sap_vm_provision_task_provision_host_single.resource.networks[0].ip }}"
    delegate_hostname: "{{ inventory_hostname }}"
    delegate_sap_vm_provision_dns_root_domain_name: "{{ sap_vm_provision_dns_root_domain }}"


### begin block, parameters will be applied to each task within the block
- name: Allow login from root OS User
  remote_user: root
  become: true
  become_user: root
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  vars:
    ansible_ssh_private_key_file: "{{ delegate_sap_vm_provision_ssh_host_private_key_file_path }}"
    ansible_ssh_common_args: -o ConnectTimeout=180 -o ControlMaster=auto -o ControlPersist=3600s -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ForwardX11=no -o ProxyCommand='ssh -W %h:%p {{ delegate_sap_vm_provision_bastion_user }}@{{ delegate_sap_vm_provision_bastion_public_ip }} -p {{ delegate_sap_vm_provision_bastion_ssh_port }} -i {{ delegate_sap_vm_provision_ssh_bastion_private_key_file_path }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
  block:

    - name: Create .ssh directory for root user
      ansible.builtin.file:
        path: /root/.ssh
        state: directory
        mode: '0744'

    - name: Create root authorized_keys file and entries
      ansible.builtin.copy:
        dest: /root/.ssh/authorized_keys
        mode: '0600'
        content: |
          {{ __sap_vm_provision_task_ibmcloud_pi_ssh_public_key.resource.ssh_key }}

    - name: Permit root login
      register: __sap_vm_provision_task_os_sshd_config
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: '(^PermitRootLogin no)'
        replace: 'PermitRootLogin yes'

    - name: Reload sshd service
      ansible.builtin.service:
        name: sshd
        state: reloaded
      when:
        - __sap_vm_provision_task_os_sshd_config.changed

### end of block


- name: Append loop value to register
  ansible.builtin.set_fact:
    __sap_vm_provision_task_provision_host_single: "{{ __sap_vm_provision_task_provision_host_single | combine( { 'host_node' : inventory_hostname } , { 'sap_host_type' : target_provision_host_spec.sap_host_type } , { 'sap_system_type' : (target_provision_host_spec.sap_system_type | default('')) } ) }}"

- name: Append output to merged register
  ansible.builtin.set_fact:
    register_provisioned_host_all: "{{ register_provisioned_host_all + [__sap_vm_provision_task_provision_host_single] }}"
