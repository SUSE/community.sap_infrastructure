---

# The IBM Cloud Load Balancer is provisioned before Linux Pacemaker and requires a temporary Health Check Probe port to be used with an an active OS service listening.
# During initial installation, the Health Check Port probe will use Port 55550/55551/55552 with netcat listening, and be switched after the SAP Installation and Linux Pacemaker installation to the correct port number.
#
# This is because an IBM Cloud Load Balancer Backend Pool Health Check probe is executed to all Backend Pool Members (Server instances) ,
# and if the host is not listening on the port it will fail, which will mark the resource as unhealthy,
# the traffic will not be routed to the host and if all hosts fail then the IBM Cloud Load Balancer Frontend IP will also fail causing SAP software failures.
#
# NOTE - use of weighted round-robin is to mitigate any potential risk of misconfiguration (both primary and secondary nodes showing as active), by using logic 'for every 100 connections send 1 connection to secondary' when both are hosts are active.

- name: Ansible Task block for amending Load Balancer ports for High Availability - after provisioning IBM Cloud VS instances
  delegate_to: localhost
  run_once: true
  environment:
    # IC_API_KEY: "{{ sap_vm_provision_ibmcloud_api_key }}" # For legacy Ansible Collection
    # IBMCLOUD_API_KEY: "{{ sap_vm_provision_ibmcloud_api_key }}" # For IBM Cloud CLI quiet login
    IC_REGION: "{{ sap_vm_provision_ibmcloud_region }}"
  when:
    - sap_ha_pacemaker_cluster_ibmcloud_region is defined
    - (groups["hana_secondary"] is defined and (groups["hana_secondary"] | length>0)) or (groups["nwas_ers"] is defined and (groups["nwas_ers"] | length>0)) or (groups["anydb_secondary"] is defined and (groups["anydb_secondary"] | length>0))
  block:

    - name: Inherit variable - set fact for IBM Cloud Load Balancer Pool Health Check - SAP HANA
      ansible.builtin.set_fact:
        ibmcloud_lb_pool_healthcheck_hana: "{{ sap_ha_pacemaker_cluster_healthcheck_hana_primary_port | default('') }}"
      when: sap_ha_pacemaker_cluster_healthcheck_hana_primary_port is defined

    - name: Inherit variable - set fact for IBM Cloud Load Balancer Pool Health Check - SAP NWAS ASCS
      ansible.builtin.set_fact:
        ibmcloud_lb_pool_healthcheck_nwas_ascs: "{{ sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ascs_port | default('') }}"
      when: sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ascs_port is defined

    - name: Inherit variable - set fact for IBM Cloud Load Balancer Pool Health Check - SAP NWAS ERS
      ansible.builtin.set_fact:
        ibmcloud_lb_pool_healthcheck_nwas_ers: "{{ sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ers_port | default('') }}"
      when: sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ers_port is defined

    - name: Default variable - Set fact for IBM Cloud Load Balancer Pool Health Check - SAP HANA
      ansible.builtin.set_fact:
        ibmcloud_lb_pool_healthcheck_hana: "{{ ('620' + (sap_system_hana_db_instance_nr | default('')) | string) | int }}"
      when: not sap_ha_pacemaker_cluster_healthcheck_hana_primary_port is defined

    - name: Default variable - Set fact for IBM Cloud Load Balancer Pool Health Check - SAP NWAS ASCS
      ansible.builtin.set_fact:
        ibmcloud_lb_pool_healthcheck_nwas_ascs: "{{ ('620' + (sap_system_nwas_abap_ascs_instance_nr | default('')) | string) | int }}"
      when: not sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ascs_port is defined

    - name: Default variable - Set fact for IBM Cloud Load Balancer Pool Health Check - SAP NWAS ERS
      ansible.builtin.set_fact:
        ibmcloud_lb_pool_healthcheck_nwas_ers: "{{ ('620' + (sap_system_nwas_abap_ers_instance_nr | default('')) | string) | int }}"
      when: not sap_ha_pacemaker_cluster_healthcheck_nwas_abap_ers_port is defined


    # Workaround for bug which populates region and ibmcloud_api_key as TF arguments for ibm_is_lbs_info Ansible Module in legacy Ansible Collection
    - name: IBM Cloud CLI execution to list Load Balancer/s info
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_all_info_shell
      ansible.builtin.shell: |
        ibmcloud config --quiet --check-version false && ibmcloud login --apikey="{{ sap_vm_provision_ibmcloud_api_key }}" -g {{ sap_vm_provision_ibmcloud_resource_group_name }} -r {{ sap_vm_provision_ibmcloud_region }} --quiet
        #ibmcloud plugin install infrastructure-service -f --quiet
        ibmcloud is load-balancers --quiet --output json

    - name: Set fact for IBM Cloud Load Balancer/s info
      ansible.builtin.set_fact:
        ibmcloud_lbs_all_info: "{{ ('[' + (__sap_vm_provision_task_ibmcloud_lb_all_info_shell.stdout | split('[',1) | last)) | trim | from_json }}"

    - name: Set fact for IBM Cloud Load Balancer Back-end Pools to target
      ansible.builtin.set_fact:
        ibmcloud_lbs_target_pools: []

    - name: Update fact for IBM Cloud Load Balancer Back-end Pools to target
      ansible.builtin.set_fact:
        ibmcloud_lbs_target_pools: "{{ ibmcloud_lbs_target_pools + [{ item.id : [( item.pools | json_query('[*].id') )] }] }}"
      loop: "{{ ibmcloud_lbs_all_info }}"
      loop_control:
        label: "{{ item.name }}"
      when: "(sap_vm_provision_ha_load_balancer_name_hana in item.name) or (sap_vm_provision_ha_load_balancer_name_anydb in item.name) or (sap_vm_provision_ha_load_balancer_name_nwas + '-ascs' in item.name) or (sap_vm_provision_ha_load_balancer_name_nwas + '-ers' in item.name)"

    # - name: Identify IBM Cloud Load Balancer Back-end Pools
    #   no_log: "{{ __sap_vm_provision_no_log }}"
    #   register: __sap_vm_provision_task_ibmcloud_lb_pools
    #   ibm.cloudcollection.ibm_is_lb_pools_info:
    #     lb: "{{ item.id }}"
    #     ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
    #   loop: "{{ ibmcloud_lbs_all_info }}"
    #   loop_control:
    #     label: "{{ item.name }}"
    #   when: "(sap_vm_provision_ha_load_balancer_name_hana in item.name) or (sap_vm_provision_ha_load_balancer_name_anydb in item.name) or (sap_vm_provision_ha_load_balancer_name_nwas + '-ascs' in item.name) or (sap_vm_provision_ha_load_balancer_name_nwas + '-ers' in item.name)"


    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP HANA - System DB SQL
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_hana1
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana + '-pool-sysdb-sql') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_hana + '-pool-sysdb-sql' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_hana }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['hana_secondary'] is defined and (groups['hana_secondary'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP HANA - MDC Tenant 1 SQL
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_hana2
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana + '-pool-mdc1-sql') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_hana + '-pool-mdc1-sql' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_hana }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['hana_secondary'] is defined and (groups['hana_secondary'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP HANA - startsrv HTTP
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_hana3
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana + '-pool-startsrv-http') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_hana + '-pool-startsrv-http' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_hana }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['hana_secondary'] is defined and (groups['hana_secondary'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP HANA - startsrv HTTPS
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_hana4
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_hana + '-pool-startsrv-https') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_hana + '-pool-startsrv-https' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_hana }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['hana_secondary'] is defined and (groups['hana_secondary'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP AnyDB - IBM Db2 Communication Port
      no_log: "{{ __sap_vm_provision_no_log }}"
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_anydb))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_anydb + '-anydb-pool-ibmdb2') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_anydb + '-ibmdb2' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: 62700
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['anydb_secondary'] is defined and (groups['anydb_secondary'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ASCS - Dispatcher sapdp<ASCS_NN> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ascs1
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-dp') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-dp' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ascs }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ASCS - Message Server sapms<SAPSID> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ascs2
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-ms') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-ms' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ascs }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ASCS - Message Server HTTP sapms<SAPSID> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ascs3
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-ms') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-ms-http' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ascs }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ASCS - Enqueue Server sapenq<SAPSID> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ascs4
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-enq') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-enq' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ascs }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ASCS - Enqueue Replicator Server sapenqrepl<SAPSID> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ascs5
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-enq') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-enqrepl' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ascs }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ASCS - SAP Start Service (SAPControl SOAP) HTTP sapctrl<ASCS_NN> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ascs6
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-sapctrl') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-sapctrl' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ascs }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ASCS - SAP Start Service (SAPControl SOAP) HTTPS (Secure) sapctrls<ASCS_NN>
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ascs7
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-sapctrls') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ascs-pool-sapctrls' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ascs }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    # - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ERS - Dispatcher sapdp<ERS_NN> process
    #   no_log: "{{ __sap_vm_provision_no_log }}"
    #   register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ers1
    #   ibm.cloudcollection.ibm_is_lb_pool:
    #     id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-dp') | first).id }}"
    #     name: name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-dp' }}"
    #     # lb: # Do not use, will force create new resource
    #     algorithm: weighted_round_robin
    #     protocol: tcp
    #     health_delay: 20
    #     health_retries: 2
    #     health_timeout: 10
    #     health_type: tcp
    #     health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ers }}"
    #     ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
    #   when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    # - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ERS - Message Server sapms<SAPSID> process
    #   no_log: "{{ __sap_vm_provision_no_log }}"
    #   register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ers2
    #   ibm.cloudcollection.ibm_is_lb_pool:
    #     id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-ms') | first).id }}"
    #     name: name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-ms' }}"
    #     # lb: # Do not use, will force create new resource
    #     algorithm: weighted_round_robin
    #     protocol: tcp
    #     health_delay: 20
    #     health_retries: 2
    #     health_timeout: 10
    #     health_type: tcp
    #     health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ers }}"
    #     ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
    #   when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ERS - Enqueue Replication Server sapenqr<SAPSID> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ers3
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-enqr') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-enqr' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ers }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ERS - SAP Start Service (SAPControl SOAP) HTTP sapctrl<ERS_NN> process
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ers4
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-sapctrl') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-sapctrl' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ers }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))

    - name: Update IBM Cloud Load Balancer Back-end Pool Health Check Port to Linux Pacemaker controlled listening port for SAP NetWeaver ERS - SAP Start Service (SAPControl SOAP) HTTPS (Secure) sapctrls<ERS_NN>
      no_log: "{{ __sap_vm_provision_no_log }}"
      register: __sap_vm_provision_task_ibmcloud_lb_pool_nwas_ers5
      ibm.cloudcollection.ibm_is_lb_pool:
        id: "{{ (ibmcloud_lbs_all_info | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers'))[0].id }}/{{ ((ibmcloud_lbs_all_info | json_query('[*].pools') | flatten) | selectattr('name', '==', sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-sapctrls') | first).id }}"
        name: "{{ sap_vm_provision_ha_load_balancer_name_nwas + '-ers-pool-sapctrls' }}"
        # lb: # Do not use, will force create new resource
        algorithm: weighted_round_robin
        protocol: tcp
        health_delay: 20
        health_retries: 2
        health_timeout: 10
        health_type: tcp
        health_monitor_port: "{{ ibmcloud_lb_pool_healthcheck_nwas_ers }}"
        ibmcloud_api_key: "{{ sap_vm_provision_ibmcloud_api_key }}"
      when: (groups['nwas_ers'] is defined and (groups['nwas_ers'] | length>0))
