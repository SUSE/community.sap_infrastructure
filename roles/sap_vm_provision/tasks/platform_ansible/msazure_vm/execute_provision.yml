---
# The tasks in this file are executed in a loop over the defined hosts

- name: Ensure short hostname is not longer than 13 characters (see SAP Note 611361)
  ansible.builtin.assert:
    that: (inventory_hostname | length | int) <= (13 | int)
    fail_msg: "FAIL: The length of the hostname is {{ inventory_hostname | length | int }} but must be less or equal to 13 characters!"

# When SAP HANA Scale-Out is used, if host name is not in original specifications then strip suffix node number from host name
- name: Set fact when performing SAP HANA Scale-Out
  ansible.builtin.set_fact:
    scaleout_origin_host_spec: "{{ inventory_hostname | regex_replace('^(.+?)\\d*$', '\\1') }}"
  when:
    - sap_vm_provision_calculate_sap_hana_scaleout_active_coordinator is defined
    - not inventory_hostname in lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan].keys()

- name: Set fact for host specifications of the provision target
  ansible.builtin.set_fact:
    target_provision_host_spec: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan][scaleout_origin_host_spec | default(inventory_hostname)] }}"

- name: Verify if network interface for MS Azure VM already exists (i.e. re-run)
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_vnic_info
  azure.azcollection.azure_rm_networkinterface_info:
    resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
    name: "{{ inventory_hostname }}-nic"
    # Azure credentials
    subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
    tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
    client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
    secret: "{{ sap_vm_provision_msazure_app_client_secret }}"

- name: Provision network interface for MS Azure VM
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_vnic
  azure.azcollection.azure_rm_networkinterface:
    resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
    location: "{{ sap_vm_provision_msazure_location_region }}"
    name: "{{ inventory_hostname }}-nic"
    virtual_network: "{{ sap_vm_provision_msazure_vnet_name }}"
    subnet_name: "{{ sap_vm_provision_msazure_vnet_subnet_name }}"
    create_with_security_group: false
    ip_configurations:
      - name: "{{ inventory_hostname }}-nic-ipconfig"
        primary: true
        #private_ip_allocation_method: "Static" # When static, must define the specific IP Address
    enable_accelerated_networking: true
    enable_ip_forwarding: "{{ target_provision_host_spec.disable_ip_anti_spoofing }}" # When disable the Anti IP Spoofing = true, then Enable IP Forwarding = true
    availability_set: "{{ (
      (__sap_vm_provision_task_msazure_availability_set.results | selectattr('item','==','hana'))[0].state.name
      if ('hana_primary' in target_provision_host_spec.sap_host_type or 'hana_secondary' in target_provision_host_spec.sap_host_type)
      else
      (__sap_vm_provision_task_msazure_availability_set.results | selectattr('item','==','anydb'))[0].state.name
      if ('anydb_primary' in target_provision_host_spec.sap_host_type or 'anydb_secondary' in target_provision_host_spec.sap_host_type)
      else
      (__sap_vm_provision_task_msazure_availability_set.results | selectattr('item','==','nwas'))[0].state.name
      if ('nwas_ascs' in target_provision_host_spec.sap_host_type or 'nwas_ers' in target_provision_host_spec.sap_host_type)
      ) | default(omit) }}"
    # Azure credentials
    subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
    tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
    client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
    secret: "{{ sap_vm_provision_msazure_app_client_secret }}"
  when: not (__sap_vm_provision_task_provision_host_single_vnic_info.networkinterfaces | length) > 0

- name: Provision MS Azure VM
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single
  azure.azcollection.azure_rm_virtualmachine:
    resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
    location: "{{ sap_vm_provision_msazure_location_region }}"
    name: "{{ inventory_hostname }}"
    admin_username: "azureadmin"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/azureadmin/.ssh/authorized_keys
        key_data: "{{ __sap_vm_provision_task_msazure_key_pair_name_ssh_host_public_key_value }}"
    vm_size: "{{ target_provision_host_spec.virtual_machine_profile }}"
    image:
      publisher: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_os_image_dictionary')[sap_vm_provision_msazure_vm_host_os_image].publisher }}"
      offer: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_os_image_dictionary')[sap_vm_provision_msazure_vm_host_os_image].offer }}"
      sku: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_os_image_dictionary')[sap_vm_provision_msazure_vm_host_os_image].sku }}"
      version: latest
    network_interfaces: "{{ inventory_hostname }}-nic"
    public_ip_allocation_method: "Disabled"
    managed_disk_type: StandardSSD_LRS
    remove_on_absent: ["all"]
    vm_identity:
      type: SystemAssigned
    state: "present"
    started: true
    # Azure credentials
    subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
    tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
    client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
    secret: "{{ sap_vm_provision_msazure_app_client_secret }}"


- name: Read MS Azure VM information
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_info
  azure.azcollection.azure_rm_virtualmachine_info:
    resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
    name: "{{ inventory_hostname }}"
    # Azure credentials
    subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
    tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
    client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
    secret: "{{ sap_vm_provision_msazure_app_client_secret }}"

- name: Read MS Azure VM attached disks information
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_ansible_facts_host_disks_info
  azure.azcollection.azure_rm_manageddisk_info:
    managed_by: "{{ __sap_vm_provision_task_provision_host_single_info.vms[0].id }}"
    # Azure credentials
    subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
    tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
    client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
    secret: "{{ sap_vm_provision_msazure_app_client_secret }}"


- name: Create fact for delegate host IP
  ansible.builtin.set_fact:
    provisioned_private_ip: "{{ __sap_vm_provision_task_provision_host_single.ansible_facts.azure_vm.network_profile.network_interfaces[0].properties.ip_configurations[0].private_ip_address }}"


- name: Copy facts to delegate host
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  ansible.builtin.set_fact:
    delegate_sap_vm_provision_bastion_user: "{{ sap_vm_provision_bastion_user }}"
    delegate_sap_vm_provision_bastion_public_ip: "{{ sap_vm_provision_bastion_public_ip }}"
    delegate_sap_vm_provision_bastion_ssh_port: "{{ sap_vm_provision_bastion_ssh_port }}"
    delegate_sap_vm_provision_ssh_bastion_private_key_file_path: "{{ sap_vm_provision_ssh_bastion_private_key_file_path }}"
    delegate_sap_vm_provision_ssh_host_private_key_file_path: "{{ sap_vm_provision_ssh_host_private_key_file_path }}"

- name: Collect only facts about hardware
  register: __sap_vm_provision_task_ansible_facts_host_disks_info
  ansible.builtin.setup:
    gather_subset:
      - hardware
  remote_user: azureadmin
  become: true
  become_user: root
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  vars:
    ansible_ssh_private_key_file: "{{ delegate_sap_vm_provision_ssh_host_private_key_file_path }}"
    ansible_ssh_common_args: -o ConnectTimeout=180 -o ControlMaster=auto -o ControlPersist=3600s -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ForwardX11=no -o ProxyCommand='ssh -W %h:%p {{ delegate_sap_vm_provision_bastion_user }}@{{ delegate_sap_vm_provision_bastion_public_ip }} -p {{ delegate_sap_vm_provision_bastion_ssh_port }} -i {{ delegate_sap_vm_provision_ssh_bastion_private_key_file_path }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
  # Ensure that VM has enough time to start before connecting
  retries: 60
  delay: 10

#- name: Output disks
#  ansible.builtin.debug:
#    var: hostvars[inventory_hostname].ansible_devices.keys() | list

#- name: Debug Ansible Facts devices used list
#  ansible.builtin.debug:
#    msg: "{{ __sap_vm_provision_task_ansible_facts_host_disks_info.ansible_facts.ansible_device_links.ids.keys() | list }}"


- name: Set fact for available storage volume device names
  ansible.builtin.set_fact:
    available_volumes: |-
      {% set letters = 'bcdefghijklmnopqrstuvwxyz' %}
      {% set ansible_facts_devices_used_list = __sap_vm_provision_task_ansible_facts_host_disks_info.ansible_facts.ansible_device_links.ids.keys() | list %}
      {% set volumes = [] %}
      {%- for letter in letters -%}
        {% for device in ansible_facts_devices_used_list -%}
          {% if '/dev/sd' + letter not in device -%}
            {% set dev = volumes.append('/dev/sd' + letter) %}
          {%- endif %}
        {%- endfor %}
      {% endfor %}
      {{ volumes | list | unique }}

#- name: Debug available_volumes
#  ansible.builtin.debug:
#    msg: "{{ available_volumes }}"

# Combination of only the filesystem volume information from the lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')
# for volume device assignment.
# This task assigns device names for each volume to be created.
- name: Set fact for target device map
  ansible.builtin.set_fact:
    filesystem_volume_map: |
      {% set volume_map = [] -%}
      {% set av_vol = available_volumes -%}
      {% for storage_item in target_provision_host_spec.storage_definition -%}
        {% for idx in range(0, storage_item.disk_count | default(1)) -%}
          {% if (storage_item.filesystem_type is defined) -%}
            {% if ('swap' in storage_item.filesystem_type and storage_item.swap_path is not defined)
            or ('swap' not in storage_item.filesystem_type and storage_item.nfs_path is not defined) -%}
              {% set vol = volume_map.extend([
              {
                'definition_key': storage_item.name,
                'device': av_vol[0],
                'fstype': storage_item.filesystem_type | default('xfs'),
                'name': storage_item.name + idx|string,
                'size': storage_item.disk_size | default(0),
                'type': storage_item.disk_type | default('')
              }
              ]) %}
            {%- set _ = av_vol.pop(0) -%}
            {%- endif %}
          {%- endif %}
        {%- endfor %}
      {%- endfor %}
      {{ volume_map }}

#- name: Debug filesystem_volume_map
#  ansible.builtin.debug:
#    msg: "{{ filesystem_volume_map }}"


# The volume creation task requires the above task to define the parameter
# which contains the calculated unique device names.
- name: Provision Azure Managed Disk volumes for Azure VM filesystems
  no_log: "{{ __sap_vm_provision_no_log }}"
  register: __sap_vm_provision_task_provision_host_single_volumes
  azure.azcollection.azure_rm_manageddisk:
    resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
    location: "{{ sap_vm_provision_msazure_location_region }}"
    name: "{{ inventory_hostname }}-vol_{{ vol_item.name }}"
    disk_size_gb: "{{ vol_item.size }}"
    managed_by_extended:
      - name: "{{ inventory_hostname }}"
        resource_group: "{{ sap_vm_provision_msazure_resource_group_name }}"
    # Premium SSD size (P), Standard SSD size (E), Standard HDD size (S)
    storage_account_type: "{% if vol_item.type | regex_search('^P.*') %}Premium_LRS{% elif vol_item.type | regex_search('^E.*') %}StandardSSD_LRS{% elif vol_item.type | regex_search('^S.*') %}Standard_LRS{% else %}StandardSSD_LRS{% endif %}" # Standard_LRS, StandardSSD_LRS, Premium_LRS, UltraSSD_LRS
    # Azure credentials
    subscription_id: "{{ sap_vm_provision_msazure_subscription_id }}"
    tenant: "{{ sap_vm_provision_msazure_tenant_id }}"
    client_id: "{{ sap_vm_provision_msazure_app_client_id }}"
    secret: "{{ sap_vm_provision_msazure_app_client_secret }}"
  loop: "{{ filesystem_volume_map }}"
  loop_control:
    loop_var: vol_item
    index_var: vol_item_index
    label: "{{ vol_item.definition_key }}: {{ vol_item.name }} (size: {{ vol_item.size }})"
  when:
    - vol_item.fstype is defined
    - vol_item.size > 0
  failed_when: "(__sap_vm_provision_task_provision_host_single_volumes.msg is defined) and ('already exists' not in __sap_vm_provision_task_provision_host_single_volumes.msg)"


- name: Add host facts
  ansible.builtin.set_fact:
    filesystem_volume_map: "{{ filesystem_volume_map }}"
    __sap_vm_provision_task_provision_host_single_volumes: "{{ __sap_vm_provision_task_provision_host_single_volumes }}"
  delegate_to: "{{ inventory_hostname }}"
  delegate_facts: true

- name: Create fact for delegate host IP
  ansible.builtin.set_fact:
    provisioned_private_ip: "{{ __sap_vm_provision_task_provision_host_single.ansible_facts.azure_vm.network_profile.network_interfaces[0].properties.ip_configurations[0].private_ip_address }}"

- name: Copy facts to delegate host
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  ansible.builtin.set_fact:
    delegate_sap_vm_provision_bastion_user: "{{ sap_vm_provision_bastion_user }}"
    delegate_sap_vm_provision_bastion_public_ip: "{{ sap_vm_provision_bastion_public_ip }}"
    delegate_sap_vm_provision_bastion_ssh_port: "{{ sap_vm_provision_bastion_ssh_port }}"
    delegate_sap_vm_provision_ssh_bastion_private_key_file_path: "{{ sap_vm_provision_ssh_bastion_private_key_file_path }}"
    delegate_sap_vm_provision_ssh_host_private_key_file_path: "{{ sap_vm_provision_ssh_host_private_key_file_path }}"
    delegate_private_ip: "{{ __sap_vm_provision_task_provision_host_single.ansible_facts.azure_vm.network_profile.network_interfaces[0].properties.ip_configurations[0].private_ip_address }}"
    delegate_hostname: "{{ inventory_hostname }}"
    delegate_sap_vm_provision_dns_root_domain_name: "{{ sap_vm_provision_dns_root_domain }}"


### begin block, parameters will be applied to each task within the block
- name: Allow login from root OS User
  remote_user: azureadmin
  become: true
  become_user: root
  delegate_to: "{{ provisioned_private_ip }}"
  delegate_facts: true
  vars:
    ansible_ssh_private_key_file: "{{ delegate_sap_vm_provision_ssh_host_private_key_file_path }}"
    ansible_ssh_common_args: -o ConnectTimeout=180 -o ControlMaster=auto -o ControlPersist=3600s -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ForwardX11=no -o ProxyCommand='ssh -W %h:%p {{ delegate_sap_vm_provision_bastion_user }}@{{ delegate_sap_vm_provision_bastion_public_ip }} -p {{ delegate_sap_vm_provision_bastion_ssh_port }} -i {{ delegate_sap_vm_provision_ssh_bastion_private_key_file_path }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
  block:

    - name: Fix root authorized_keys entries
      ansible.builtin.replace:
        path: /root/.ssh/authorized_keys
        backup: true
        regexp: '(^.*ssh-)' # Allow ssh-rsa , ssh-ed25519 etc.
        replace: 'ssh-'

    - name: Permit root login
      register: __sap_vm_provision_task_os_sshd_config
      ansible.builtin.replace:
        path: /etc/ssh/sshd_config
        regexp: '(^PermitRootLogin no)'
        replace: 'PermitRootLogin yes'

    - name: Reload sshd service
      ansible.builtin.service:
        name: sshd
        state: reloaded
      when:
        - __sap_vm_provision_task_os_sshd_config.changed

### end of block


- name: Append loop value to register
  ansible.builtin.set_fact:
    __sap_vm_provision_task_provision_host_single: "{{ __sap_vm_provision_task_provision_host_single | combine( { 'host_node' : inventory_hostname } , { 'sap_host_type' : target_provision_host_spec.sap_host_type } , { 'sap_system_type' : (target_provision_host_spec.sap_system_type | default('')) } ) }}"

- name: Append output to merged register
  ansible.builtin.set_fact:
    register_provisioned_host_all: "{{ register_provisioned_host_all + [__sap_vm_provision_task_provision_host_single] }}"
